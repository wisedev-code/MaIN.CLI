name: Build and Create MSI Installer

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_NAME: MaIN.CLI
  ASSEMBLY_NAME: mcli
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-package:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj

      - name: Build project
        run: dotnet build ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj --configuration Release --no-restore

      - name: Test project (if tests exist)
        run: dotnet test --configuration Release --no-build --verbosity normal
        continue-on-error: true

      - name: Publish self-contained executable
        run: |
          dotnet publish ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj `
          --configuration Release `
          --runtime win-x64 `
          --output ./publish `

      - name: Copy icon file for installer
        run: Copy-Item "${{ env.PROJECT_NAME }}\main.ico" -Destination "main.ico"

      - name: Setup WiX Toolset
        run: |
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "wix311-binaries.zip"
          Expand-Archive -Path "wix311-binaries.zip" -DestinationPath "wix"
          echo "${{ github.workspace }}\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Create WiX source file
        run: |
          $wxsContent = @"
          <?xml version="1.0" encoding="UTF-8"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Product Id="*" 
                     Name="MaIN.NET CLI" 
                     Language="1033" 
                     Version="1.0.0.0" 
                     Manufacturer="wisedev-code" 
                     UpgradeCode="{$(New-Guid)}">
          
              <Package InstallerVersion="200" 
                       Compressed="yes" 
                       InstallScope="perMachine" 
                       Description="MaIN.NET CLI Tool" />
          
              <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
              <MediaTemplate EmbedCab="yes" />
              <Icon Id="ProductIcon" SourceFile="main.ico" />
              <Property Id="ARPPRODUCTICON" Value="ProductIcon" />
          
              <Feature Id="ProductFeature" Title="MaIN.NET CLI" Level="1">
                <ComponentGroupRef Id="ProductComponents" />
                <ComponentRef Id="PathComponent" />
                <ComponentRef Id="ApplicationShortcut" />
              </Feature>
          
              <Directory Id="TARGETDIR" Name="SourceDir">
                <Directory Id="ProgramFilesFolder">
                  <Directory Id="CompanyFolder" Name="wisedev-code">
                    <Directory Id="INSTALLFOLDER" Name="MaIN.NET CLI" />
                  </Directory>
                </Directory>
                <Directory Id="ProgramMenuFolder">
                  <Directory Id="ApplicationProgramsFolder" Name="MaIN.NET CLI" />
                </Directory>
              </Directory>
          
              <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
                <Component Id="MainExecutable" Guid="{$(New-Guid)}">
                  <File Id="mcli.exe" 
                        Source="publish\mcli.exe" 
                        KeyPath="yes" />
                </Component>
              </ComponentGroup>
          
              <Component Id="PathComponent" Directory="INSTALLFOLDER" Guid="{$(New-Guid)}">
                <CreateFolder />
                <Environment Id="PATH" 
                            Name="PATH" 
                            Value="[INSTALLFOLDER]" 
                            Permanent="no" 
                            Part="last" 
                            Action="set" 
                            System="yes" />
                <RegistryValue Root="HKCU" 
                             Key="Software\wisedev-code\MaIN.NET CLI" 
                             Name="PathInstalled" 
                             Type="string" 
                             Value="1" 
                             KeyPath="yes" />
              </Component>
          
              <Component Id="ApplicationShortcut" Directory="ApplicationProgramsFolder" Guid="{$(New-Guid)}">
                <Shortcut Id="ApplicationStartMenuShortcut"
                          Name="MaIN.NET CLI"
                          Description="MaIN.NET CLI Tool"
                          Target="[INSTALLFOLDER]mcli.exe"
                          WorkingDirectory="INSTALLFOLDER"
                          Icon="ProductIcon" />
                <RemoveFolder Id="ApplicationProgramsFolder" On="uninstall" />
                <RegistryValue Root="HKCU" 
                             Key="Software\wisedev-code\MaIN.NET CLI" 
                             Name="ShortcutInstalled" 
                             Type="string" 
                             Value="1" 
                             KeyPath="yes" />
              </Component>
          
            </Product>
          </Wix>
          "@
          
          $wxsContent | Out-File -FilePath "installer.wxs" -Encoding UTF8

      - name: Compile WiX object file
        run: candle.exe installer.wxs -out installer.wixobj

      - name: Link MSI file
        run: light.exe installer.wixobj -out "${{ env.ASSEMBLY_NAME }}-installer.msi" -spdb

      - name: Upload MSI as artifact
        uses: actions/upload-artifact@v4
        with:
          name: msi-installer
          path: "${{ env.ASSEMBLY_NAME }}-installer.msi"

      - name: Create Release (on tags)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ env.ASSEMBLY_NAME }}-installer.msi"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}